LazarusResources.Add('gitignore','TXT',[
  '# Created by https://www.toptal.com/developers/gitignore/api/freepascal'#10
  +'# Edit at https://www.toptal.com/developers/gitignore?templates=freepascal'
  +#10#10'### FreePascal ###'#10'*.lps'#10'*.compiled'#10'*.[oa]'#10'*.ppu'#10
  +'*.rst'#10'*.cgi'#10'*.exe'#10'*.log'#10'*.bak*'#10'fp.ini'#10'fp.cfg'#10'fp'
  +'.dsk'#10#10'# End of https://www.toptal.com/developers/gitignore/api/freepa'
  +'scal'#10#10'**/lib/'#10'**/backup/'#10'**/modules/'#10#10'*.app'
]);
LazarusResources.Add('launchjson','TXT',[
  '{'#10'  // Use IntelliSense to learn about possible attributes.'#10'  // Hov'
  +'er to view descriptions of existing attributes.'#10'  // For more informati'
  +'on, visit: https://go.microsoft.com/fwlink/?linkid=830387'#10'  "version": '
  +'"0.2.0",'#10'  "configurations": ['#10'    {'#10'      "type": "fpDebug",'
  +#10'      "request": "launch",'#10'      "name": "Debug",'#10'      "program'
  +'": "${workspaceFolder}/{PROJECTNAME}${command:executableExtension}",'#10'  '
  +'    "windows" : {'#10'        "fpdserver": {'#10'          "executable": "$'
  +'{extensionInstallFolder:cnoc.fpdebug}/bin/fpdserver-x86_64.exe"'#10'       '
  +' }'#10'      },'#10'      "preLaunchTask": "lazbuild: build"'#10'    },'#10
  +'    {'#10'      "type": "fpDebug",'#10'      "request": "launch",'#10'     '
  +' "name": "Debug tests",'#10'      "program": "${workspaceFolder}/tests/Test'
  +'{PROJECTNAME}${command:executableExtension}",'#10'      "parameters": ["--s'
  +'uite=TestThatPasses"],'#10'      "windows" : {'#10'        "fpdserver": {'
  +#10'          "executable": "${extensionInstallFolder:cnoc.fpdebug}/bin/fpds'
  +'erver-x86_64.exe"'#10'        }'#10'      },'#10'      "preLaunchTask": "la'
  +'zbuild: build tests"'#10'    }'#10'  ]'#10'}'
]);
LazarusResources.Add('tasksjson','TXT',[
  '{'#10'  // See https://go.microsoft.com/fwlink/?LinkId=733558'#10'  // for t'
  +'he documentation about the tasks.json format'#10'  "version": "2.0.0",'#10
  +'  "tasks": ['#10'    {'#10'      "label": "lazbuild: build",'#10'      "typ'
  +'e": "shell",'#10'      "command": "lazbuild",'#10'      "args": ["./{PROJEC'
  +'TNAME}.lpi"],'#10'      "problemMatcher": {'#10'        "owner": "external"'
  +','#10'        "fileLocation": ["absolute"],'#10'        "pattern": {'#10'  '
  +'         "regexp": "(([A-Za-z]):\\\\(?:[^\\/:*?\"<>|\\r\\n]+\\\\)*[^\\/\\s\'
  +'\(:*?\"<>|\\r\\n]*)\\((\\d+),(\\d+)\\)\\s.*(Fatal|Error|Warning|Hint|Note):'
  +'\\s\\((\\d+)\\)\\s(.*)$",'#10'           "file": 1,'#10'           "line": '
  +'3,'#10'           "column": 4,'#10'           "severity": 5,'#10'          '
  +' "code": 6,'#10'           "message": 7'#10'        },'#10'        "severit'
  +'y": "info"'#10'      },      '#10'      "group": {'#10'        "kind": "bui'
  +'ld",'#10'        "isDefault": true'#10'      }'#10'    },'#10'    {'#10'   '
  +'   "label": "lazbuild: build tests",'#10'      "type": "shell",'#10'      "'
  +'command": "lazbuild",'#10'      "args": ["tests/Test{PROJECTNAME}.lpi"],'#10
  +'      "problemMatcher": {'#10'        "owner": "external",'#10'        "fil'
  +'eLocation": ["absolute"],'#10'        "pattern": {'#10'           "regexp":'
  +' "(([A-Za-z]):\\\\(?:[^\\/:*?\"<>|\\r\\n]+\\\\)*[^\\/\\s\\(:*?\"<>|\\r\\n]*'
  +')\\((\\d+),(\\d+)\\)\\s.*(Fatal|Error|Warning|Hint|Note):\\s\\((\\d+)\\)\\s'
  +'(.*)$",'#10'           "file": 1,'#10'           "line": 3,'#10'           '
  +'"column": 4,'#10'           "severity": 5,'#10'           "code": 6,'#10'  '
  +'         "message": 7'#10'        },'#10'        "severity": "info"'#10'   '
  +'   },'#10'      "group": {'#10'        "kind": "build",'#10'        "isDefa'
  +'ult": false'#10'      }'#10'    },'#10'    {'#10'      "label": "pasc: run '
  +'tests",'#10'      "type": "shell",'#10'      "command": "pasc",'#10'      "'
  +'args": ["test"],'#10'      "group": {'#10'        "kind": "test",'#10'     '
  +'   "isDefault": true'#10'      },'#10'      "dependsOn": "lazbuild: build t'
  +'ests"'#10'    },'#10'    {'#10'      "label": "pasc: watch, build tests and'
  +' run tests",'#10'      "type": "shell",'#10'      "command": "pasc",'#10'  '
  +'    "args": ["watch", "--build", "--test", "."],'#10'      "problemMatcher"'
  +': []'#10'    },'#10'    {'#10'      "label": "pasdoc: build documentation",'
  +#10'      "type": "shell",'#10'      "command": "./docs/generate/build.ps1",'
  +#10'      "args": [],'#10'      "problemMatcher": []'#10'    }'#10'  ]'#10'}'
]);
LazarusResources.Add('projectlpi','TXT',[
  '<?xml version="1.0" encoding="UTF-8"?>'#10'<CONFIG>'#10'  <ProjectOptions>'
  +#10'    <Version Value="12"/>'#10'    <PathDelim Value="\"/>'#10'    <Genera'
  +'l>'#10'      <Flags>'#10'        <MainUnitHasCreateFormStatements Value="Fa'
  +'lse"/>'#10'        <MainUnitHasTitleStatement Value="False"/>'#10'        <'
  +'MainUnitHasScaledStatement Value="False"/>'#10'      </Flags>'#10'      <Se'
  +'ssionStorage Value="InProjectDir"/>'#10'      <Title Value="{PROJECTNAME}"/'
  +'>'#10'      <ResourceType Value="res"/>'#10'      <UseXPManifest Value="Tru'
  +'e"/>'#10'      <XPManifest>'#10'        <DpiAware Value="True"/>'#10'      '
  +'</XPManifest>'#10'    </General>'#10'    <VersionInfo>'#10'      <UseVersio'
  +'nInfo Value="True"/>'#10'      <MajorVersionNr Value="1"/>'#10'      <Minor'
  +'VersionNr Value="0"/>'#10'      <RevisionNr Value="0"/>'#10'    </VersionIn'
  +'fo>'#10'    <BuildModes>'#10'      <Item Name="Debug" Default="True"/>'#10
  +'      <Item Name="Release">'#10'        <CompilerOptions>'#10'          <Ve'
  +'rsion Value="11"/>'#10'          <PathDelim Value="\"/>'#10'          <Targ'
  +'et>'#10'            <Filename Value="{PROJECTNAME}"/>'#10'          </Targe'
  +'t>'#10'          <SearchPaths>'#10'            <IncludeFiles Value="$(ProjO'
  +'utDir)"/>'#10'            <UnitOutputDirectory Value="lib\$(TargetCPU)-$(Ta'
  +'rgetOS)"/>'#10'          </SearchPaths>'#10'          <CodeGeneration>'#10
  +'            <SmartLinkUnit Value="True"/>'#10'            <Optimizations>'
  +#10'              <OptimizationLevel Value="3"/>'#10'            </Optimizat'
  +'ions>'#10'          </CodeGeneration>'#10'          <Linking>'#10'         '
  +'   <Debugging>'#10'              <GenerateDebugInfo Value="False"/>'#10'   '
  +'         </Debugging>'#10'            <LinkSmart Value="True"/>'#10'       '
  +'   </Linking>'#10'        </CompilerOptions>'#10'      </Item>'#10'    </Bu'
  +'ildModes>'#10'    <PublishOptions>'#10'      <Version Value="2"/>'#10'     '
  +' <UseFileFilters Value="True"/>'#10'    </PublishOptions>'#10'    <RunParam'
  +'s>'#10'      <FormatVersion Value="2"/>'#10'    </RunParams>'#10'    <Units'
  +'>'#10'      <Unit>'#10'        <Filename Value="{PROJECTNAME}.lpr"/>'#10'  '
  +'      <IsPartOfProject Value="True"/>'#10'      </Unit>'#10'    </Units>'#10
  +'  </ProjectOptions>'#10'  <CompilerOptions>'#10'    <Version Value="11"/>'
  +#10'    <PathDelim Value="\"/>'#10'    <Target>'#10'      <Filename Value="{'
  +'PROJECTNAME}"/>'#10'    </Target>'#10'    <SearchPaths>'#10'      <IncludeF'
  +'iles Value="$(ProjOutDir)"/>'#10'      <OtherUnitFiles Value="src"/>'#10'  '
  +'    <UnitOutputDirectory Value="lib\$(TargetCPU)-$(TargetOS)"/>'#10'    </S'
  +'earchPaths>'#10'    <Parsing>'#10'      <SyntaxOptions>'#10'        <Includ'
  +'eAssertionCode Value="True"/>'#10'      </SyntaxOptions>'#10'    </Parsing>'
  +#10'    <CodeGeneration>'#10'      <Checks>'#10'        <IOChecks Value="Tru'
  +'e"/>'#10'        <RangeChecks Value="True"/>'#10'        <OverflowChecks Va'
  +'lue="True"/>'#10'        <StackChecks Value="True"/>'#10'      </Checks>'#10
  +'    </CodeGeneration>'#10'    <Linking>'#10'      <Debugging>'#10'        <'
  +'DebugInfoType Value="dsDwarf3"/>'#10'        <UseHeaptrc Value="False"/>'#10
  +'      </Debugging>'#10'    </Linking>'#10'  </CompilerOptions>'#10'  <Debug'
  +'ging>'#10'    <Exceptions>'#10'      <Item>'#10'        <Name Value="EAbort'
  +'"/>'#10'      </Item>'#10'      <Item>'#10'        <Name Value="ECodetoolEr'
  +'ror"/>'#10'      </Item>'#10'      <Item>'#10'        <Name Value="EFOpenEr'
  +'ror"/>'#10'      </Item>'#10'    </Exceptions>'#10'  </Debugging>'#10'</CON'
  +'FIG>'
]);
LazarusResources.Add('projectlpr','TXT',[
  'program {PROJECTNAME};'#10#10'{$MODE DELPHI}{$H+}'#10'{$R *.res}'#10#10'begi'
  +'n'#10'end.'
]);
LazarusResources.Add('update-path-ps1','TXT',[
  '$EnvPathCheck = [System.Environment]::GetEnvironmentVariable("Path","User")'
  +#10#10'$PascPath = $args[0]'#10#10'if (-Not $PascPath) {'#10'  $PascPath = J'
  +'oin-Path -Path $HOME -ChildPath ".pasc"'#10'}'#10#10'if (-Not $EnvPathCheck'
  +'.Contains($PascPath)) {'#10'  $EnvPathCheck = $EnvPathCheck + ";" + $PascPa'
  +'th'#10'  [System.Environment]::SetEnvironmentVariable("Path", $EnvPathCheck'
  +', "User")'#10'}'
]);
LazarusResources.Add('update-path-sh','TXT',[
  'source $HOME/.profile'#10'chmod +x $1'
]);
LazarusResources.Add('fpcunitprojectlpi','TXT',[
  '<?xml version="1.0" encoding="UTF-8"?>'#10'<CONFIG>'#10'  <ProjectOptions>'
  +#10'    <Version Value="12"/>'#10'    <PathDelim Value="\"/>'#10'    <Genera'
  +'l>'#10'      <SessionStorage Value="InProjectDir"/>'#10'      <Title Value='
  +'"{TESTPROJECTNAME}"/>'#10'      <UseAppBundle Value="False"/>'#10'      <Re'
  +'sourceType Value="res"/>'#10'    </General>'#10'    <VersionInfo>'#10'     '
  +' <UseVersionInfo Value="True"/>'#10'      <MajorVersionNr Value="1"/>'#10' '
  +'     <MinorVersionNr Value="0"/>'#10'      <RevisionNr Value="0"/>'#10'    '
  +'</VersionInfo>'#10'    <BuildModes>'#10'      <Item Name="Default" Default='
  +'"True"/>'#10'    </BuildModes>'#10'    <PublishOptions>'#10'      <Version '
  +'Value="2"/>'#10'      <UseFileFilters Value="True"/>'#10'    </PublishOptio'
  +'ns>'#10'    <RunParams>'#10'      <FormatVersion Value="2"/>'#10'    </RunP'
  +'arams>'#10'    <RequiredPackages>'#10'      <Item>'#10'        <PackageName'
  +' Value="FCL"/>'#10'      </Item>'#10'    </RequiredPackages>'#10'    <Units'
  +'>'#10'      <Unit>'#10'        <Filename Value="{TESTPROJECTNAME}.lpr"/>'#10
  +'        <IsPartOfProject Value="True"/>'#10'      </Unit>'#10'      <Unit>'
  +#10'        <Filename Value="{TestCase1}.pas"/>'#10'        <IsPartOfProject'
  +' Value="True"/>'#10'        <UnitName Value="{TestCase1}"/>'#10'      </Uni'
  +'t>'#10'    </Units>'#10'  </ProjectOptions>'#10'  <CompilerOptions>'#10'   '
  +' <Version Value="11"/>'#10'    <PathDelim Value="\"/>'#10'    <Target>'#10
  +'      <Filename Value="{TESTPROJECTNAME}"/>'#10'    </Target>'#10'    <Sear'
  +'chPaths>'#10'      <IncludeFiles Value="$(ProjOutDir)"/>'#10'      <OtherUn'
  +'itFiles Value="../src"/>'#10'      <UnitOutputDirectory Value="lib\$(Target'
  +'CPU)-$(TargetOS)"/>'#10'    </SearchPaths>'#10'    <Linking>'#10'      <Deb'
  +'ugging>'#10'        <DebugInfoType Value="dsDwarf3"/>'#10'        <UseHeapt'
  +'rc Value="True"/>'#10'      </Debugging>'#10'    </Linking>'#10'  </Compile'
  +'rOptions>'#10'  <Debugging>'#10'    <Exceptions>'#10'      <Item>'#10'     '
  +'   <Name Value="EAbort"/>'#10'      </Item>'#10'      <Item>'#10'        <N'
  +'ame Value="ECodetoolError"/>'#10'      </Item>'#10'      <Item>'#10'       '
  +' <Name Value="EFOpenError"/>'#10'      </Item>'#10'    </Exceptions>'#10'  '
  +'</Debugging>'#10'</CONFIG>'#10
]);
LazarusResources.Add('fpcunitprojectlpr','TXT',[
  'program {TESTPROJECTNAME};'#10#10'{$mode objfpc}{$H+}'#10#10'uses'#10'  Clas'
  +'ses, '#10'  SysUtils,'#10'  consoletestrunner, '#10'  {TestCase1};'#10#10'{'
  +'$R *.res}'#10#10'type'#10#10'  { TMyTestRunner }'#10#10'  TMyTestRunner = c'
  +'lass(TTestRunner)'#10'  protected'#10'  // override the protected methods o'
  +'f TTestRunner to customize its behavior'#10'  end;'#10#10'procedure Initial'
  +'izeHeapFileName;'#10'var'#10'  HeapFileName: string;'#10'begin'#10'  {$IF D'
  +'ECLARED(UseHeapTrace)}'#10'  HeapFileName := ConcatPaths([ExtractFilePath(P'
  +'aramStr(0)), ''heap.trc'']);'#10'  if FileExists(HeapFileName) then'#10'   '
  +' DeleteFile(HeapFileName);'#10'  SetHeapTraceOutput(HeapFileName);'#10'  {$'
  +'ENDIF}'#10'end;'#10#10'var'#10'  Application: TMyTestRunner;'#10#10'begin'
  +#10'  InitializeHeapFileName;'#10'  Application := TMyTestRunner.Create(nil)'
  +';'#10'  Application.Initialize;'#10'  Application.Title := ''FPCUnit Consol'
  +'e test runner'';'#10'  Application.Run;'#10'  Application.Free;'#10'end.'#10
]);
LazarusResources.Add('testcase1pas','TXT',[
  'unit {TestCase1};'#10#10'{$mode objfpc}{$H+}'#10#10'interface'#10#10'uses'#10
  +'  Classes, '#10'  SysUtils, '#10'  fpcunit, '#10'  testutils, '#10'  testre'
  +'gistry;'#10#10'type'#10#10'  T{TestCase1}= class(TTestCase)'#10'  protected'
  +#10'    procedure SetUp; override;'#10'    procedure TearDown; override;'#10
  +'  published'#10'    procedure TestThatPasses;'#10'    procedure TestThatFai'
  +'ls;'#10'    procedure TestThatLeaks;'#10'  end;'#10#10'implementation'#10#10
  +'procedure T{TestCase1}.SetUp;'#10'begin'#10#10'end;'#10#10'procedure T{Test'
  +'Case1}.TearDown;'#10'begin'#10#10'end;'#10#10'procedure T{TestCase1}.TestTh'
  +'atFails;'#10'begin'#10'  Fail(''Write your own test'');'#10'end;'#10#10'pro'
  +'cedure T{TestCase1}.TestThatPasses;'#10'begin'#10'  '#10'end;'#10#10'proced'
  +'ure T{TestCase1}.TestThatLeaks;'#10'var'#10'  LObject: TObject;'#10'begin'
  +#10'  LObject := TObject.Create;'#10'  // LObject.Free; '#10'  // above line'
  +' is commented just to leak and show pasc leak report funcionality '#10'  //'
  +' just uncomment it and run the tests again to see a report without leaks'#10
  +'end;'#10#10'initialization'#10'  RegisterTest(T{TestCase1});'#10#10'end.'#10
  +#10
]);
LazarusResources.Add('buildps1','TXT',[
  '$CurrentPath = Get-Location'#10'function Exit-Script {'#10'  Set-Location $C'
  +'urrentPath'#10'  Exit'#10'}'#10#10'function Test-CommandExists'#10'{'#10'  '
  +'param ($command)'#10'  $oldPreference = $ErrorActionPreference'#10'  $Error'
  +'ActionPreference = "stop"'#10'  try {'#10'    if (Get-Command $command) {'
  +#10'      RETURN $true'#10'    }'#10'  } catch {'#10'    RETURN $false'#10' '
  +' } finally {'#10'    $ErrorActionPreference=$oldPreference'#10'  }'#10'}'#10
  +#10'function Get-BasePath {'#10'  $CurrentDir = Get-Location'#10'  if ($Curr'
  +'entDir -notmatch ''\\$'') {'#10'    $CurrentDir = Join-Path -Path $CurrentD'
  +'ir -ChildPath "\"'#10'  }'#10#10'  if ($CurrentDir -match ''generate\\$'') '
  +'{'#10'    $CurrentDir = Join-Path -Path $CurrentDir "..\.."'#10'    $Curren'
  +'tDir = Resolve-Path -Path $CurrentDir'#10'  }'#10#10'  if ($CurrentDir -mat'
  +'ch ''docs\\$'') {'#10'    $CurrentDir = Join-Path -Path $CurrentDir ".."'#10
  +'    $CurrentDir = Resolve-Path -Path $CurrentDir'#10'  }'#10#10'  RETURN $C'
  +'urrentDir '#10'}'#10#10'$ItemAllUnits = ''<li><a href="AllUnits.html">Units'
  +'</a></li>'''#10'$ItemAllIdentifiers = ''<li><a href="AllIdentifiers.html">I'
  +'dentifiers</a></li>'''#10'function Set-NavigationItemOrder {'#10'  param ($'
  +'file)'#10'  '#10'  $Content = Get-Content -Path $file'#10#10'  $Content = $'
  +'Content.Replace(''<li><a href="quickstart.html">Quick start</a></li>'', '''
  +''')'#10'  $Content = $Content.Replace($ItemAllUnits, ''<li><a href="quickst'
  +'art.html">Quick start</a></li>'' + $ItemAllUnits)'#10#10'  $Content = $Cont'
  +'ent.Replace($ItemAllUnits, ''<hr><li>Reference<ul style="margin-left: 10px;'
  +'">'' + $ItemAllUnits)'#10'  $Content = $Content.Replace($ItemAllIdentifiers'
  +', $ItemAllIdentifiers + ''</li></ul>'')'#10#10'  Set-Content -Path $file -V'
  +'alue $Content'#10'}'#10#10'if (Test-CommandExists "pasdoc") {'#10'  Write-H'
  +'ost "Pasdoc found"'#10'} else {'#10'  Write-Host "Pasdoc was not found, is '
  +'required to build the documentation. Please install it or make sure that it'
  +' is in current path."'#10'  Exit-Script  '#10'}'#10#10'$BasePath = Get-Base'
  +'Path'#10'$DocArgs = '#10'  "--format=html " + '#10'  "--css=" + $BasePath +'
  +' "docs\generate\custom.css " +'#10'  "--use-tipue-search " +'#10'  "--outpu'
  +'t " + $BasePath + "docs " +'#10'  "--introduction=" + $BasePath + "docs\gen'
  +'erate\introduction.txt " +'#10'  "--additional="  + $BasePath + "docs\gener'
  +'ate\quickstart.txt " +'#10'  $BasePath + "src\*.pas " + $BasePath + "{PROJE'
  +'CTNAME}.lpr "'#10#10'Start-Process -FilePath "pasdoc" -ArgumentList $DocArg'
  +'s -Wait -NoNewWindow'#10#10'$DocPath = Join-Path -Path $BasePath -ChildPath'
  +' "docs\*.html"'#10#10'Get-ChildItem -Path $DocPath -Recurse | ForEach-Objec'
  +'t {'#10'  Set-NavigationItemOrder -file $_'#10'}'
]);
LazarusResources.Add('customcss','TXT',[
  '/*'#10'  Copyright 1998-2018 PasDoc developers.'#10#10'  This file is part o'
  +'f "PasDoc".'#10#10'  "PasDoc" is free software; you can redistribute it and'
  +'/or modify'#10'  it under the terms of the GNU General Public License as pu'
  +'blished by'#10'  the Free Software Foundation; either version 2 of the Lice'
  +'nse, or'#10'  (at your option) any later version.'#10#10'  "PasDoc" is dist'
  +'ributed in the hope that it will be useful,'#10'  but WITHOUT ANY WARRANTY;'
  +' without even the implied warranty of'#10'  MERCHANTABILITY or FITNESS FOR '
  +'A PARTICULAR PURPOSE.  See the'#10'  GNU General Public License for more de'
  +'tails.'#10#10'  You should have received a copy of the GNU General Public L'
  +'icense'#10'  along with "PasDoc"; if not, write to the Free Software'#10'  '
  +'Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, U'
  +'SA'#10#10'  ---------------------------------------------------------------'
  +'-------------'#10'*/'#10#10'body, html {'#10'  margin: 0;'#10'  padding: 0;'
  +#10'}'#10#10'body {'#10'  font-family: system-ui,-apple-system,"Segoe UI",Ro'
  +'boto,"Helvetica Neue","Noto Sans","Liberation Sans",Arial,sans-serif,"Apple'
  +' Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji";'#10'  '
  +'color: black;'#10'  background-color: white;'#10'}'#10#10'.container {'#10
  +'  width: 100%;'#10'  height: 100%;'#10'  border-spacing: 0;'#10'}'#10#10'.n'
  +'avigation {'#10'  float: left;'#10'  width: 20em; /* must match .content ma'
  +'rgin-left */'#10'  height: 100%;'#10'  color: white;'#10'  background-color'
  +': #787878;'#10'  position: fixed;'#10'  margin: 0;'#10'  box-sizing: border'
  +'-box; /* without this, you could not have padding here, it would overlap wi'
  +'th .content, causing errors on narrow screens */'#10'  padding: 1em;'#10'}'
  +#10'.navigation ul {'#10'  margin: 0em;'#10'  padding: 0em;'#10'}'#10'.navig'
  +'ation li {'#10'  list-style-type: none;'#10'  margin: 0.2em 0em 0em 0em;'#10
  +'  padding: 0.25em;'#10'}'#10'.navigation h2 {'#10'  text-align: center;'#10
  +'  margin: 0em;'#10'  padding: 0.5em;'#10'}'#10#10'.content {'#10'  margin-l'
  +'eft: 20em; /* must match .navigation width */'#10'  box-sizing: border-box;'
  +' /* without this, you could not have padding here, it would overlap with .n'
  +'avigation, causing errors on narrow screens */'#10'  padding: 1em;'#10'}'#10
  +'.content h1 {'#10'  margin-top: 0;'#10'}'#10#10'.appinfo {'#10'  float: rig'
  +'ht;'#10'  text-align: right;'#10'  margin-bottom: 1em;'#10'}'#10#10'img { b'
  +'order:0px; }'#10#10'hr {'#10'  border-bottom: medium none;'#10'  border-top'
  +': thin solid #888;'#10'}'#10#10'a:link {color:blue; text-decoration: none; '
  +'}'#10'a:visited {color:darkblue; text-decoration: none; }'#10'a:hover {text'
  +'-decoration: underline; }'#10'a:active {text-decoration: underline; }'#10#10
  +'.navigation a:link { color: white; text-decoration: none; }'#10'.navigation'
  +' a:visited { color: white; text-decoration: none; }'#10'.navigation a:hover'
  +' { color: white; font-weight: bold; text-decoration: none; }'#10'.navigatio'
  +'n a:active { color: white; text-decoration: none; }'#10#10'a.bold:link {col'
  +'or:blue; text-decoration: none; font-weight:normal; }'#10'a.bold:visited {c'
  +'olor:darkblue; text-decoration: none; font-weight:normal; }'#10'a.bold:hove'
  +'r {text-decoration: underline; font-weight:bold; }'#10'a.bold:active {text-'
  +'decoration: underline; font-weight:bold; }'#10#10'a.section {color: green; '
  +'text-decoration: none; font-weight: normal; }'#10'a.section:hover {color: g'
  +'reen; text-decoration: underline; font-weight: bold; }'#10#10'ul.useslist a'
  +':link {color:blue; text-decoration: none; font-weight:normal; }'#10'ul.uses'
  +'list a:visited {color:darkblue; text-decoration: none; font-weight:normal; '
  +'}'#10'ul.useslist a:hover {text-decoration: underline; font-weight:bold; }'
  +#10'ul.useslist a:active {text-decoration: underline; font-weight:bold; }'#10
  +#10'ul.hierarchy { list-style-type:none; }'#10'ul.hierarchylevel { list-styl'
  +'e-type:none; }'#10#10'p.unitlink a:link {color: blue; text-decoration: none'
  +'; font-weight:normal; }'#10'p.unitlink a:visited {color:darkblue; text-deco'
  +'ration: none; font-weight:normal; }'#10'p.unitlink a:hover {text-decoration'
  +': underline; font-weight:bold; }'#10'p.unitlink a:active {text-decoration: '
  +'underline; font-weight:bold; }'#10#10'tr.list { background: #eee; }'#10'tr.'
  +'list2 { background: #eee; }'#10'tr.listheader { background: lightgray; colo'
  +'r: black; }'#10#10'table.wide_list { border-spacing:2px; width:100%; }'#10
  +'table.wide_list td { vertical-align:top; padding:4px; }'#10#10'table.marker'
  +'legend { width:auto; }'#10'table.markerlegend td.legendmarker { text-align:'
  +'center; }'#10#10'.sections { background:white; }'#10'.sections .one_section'
  +' {'#10'  background:lightgray;'#10'  display: inline-block;'#10'  margin: 0'
  +'.2em;'#10'  padding: 0.5em 1em;'#10'}'#10#10'table.summary td.itemcode { wi'
  +'dth:100%; }'#10'table.detail td.itemcode { width:100%; }'#10#10'td.itemname'
  ,' {white-space:nowrap; }'#10'td.itemunit {white-space:nowrap; }'#10'td.itemd'
  +'esc { width:100%; }'#10#10'div.nodescription { color:red; }'#10'dl.paramete'
  +'rs dt {'#10'  color:blue;'#10'}'#10#10'code {'#10'  font-family: monospace;'
  +#10'  font-size:1.2em;'#10'}'#10#10'/* style for warning and note tag */'#10
  +'dl.tag.warning {'#10'  margin-left:-2px;'#10'  padding-left: 3px;'#10'  bor'
  +'der-left:4px solid;'#10'  border-color: #FF0000;'#10'}'#10'dl.tag.note {'#10
  +'  margin-left:-2px;'#10'  padding-left: 3px;'#10'  border-left:4px solid;'
  +#10'  border-color: #D0C000;'#10'}'#10#10'span.badge {'#10'  text-align: cen'
  +'ter;'#10'  text-size-adjust: 100%;'#10'  font-size: 0.8em;'#10'  background'
  +'-color: black;'#10'  color: white;'#10'  display: inline-block;'#10'  paddi'
  +'ng-left: 8px;'#10'  padding-right: 8px;'#10'}'#10#10'/* Various browsers ha'
  +'ve various default styles for <h6>,'#10'   sometimes ugly for our purposes,'
  +' so it''s best to set things'#10'   like font-size and font-weight in out p'
  +'asdoc.css explicitly. */'#10'h6.description_section {'#10'  /* font-size 10'
  +'0% means that it has the same font size as the'#10'     parent element, i.e'
  +'. normal description text */'#10'  font-size: 100%;'#10'  font-weight: bold'
  +';'#10'  /* By default browsers usually have some large margin-bottom and'#10
  +'     margin-top for <h1-6> tags. In our case, margin-bottom is'#10'     unn'
  +'ecessary, we want to visually show that description_section'#10'     is clo'
  +'sely related to content below. In this situation'#10'     (where the font s'
  +'ize is just as a normal text), smaller bottom'#10'     margin seems to look'
  +' good. */'#10'  margin-top: 1.4em;'#10'  margin-bottom: 0em;'#10'}'#10#10'h'
  +'1 {'#10'  font-size: 1.8em;'#10'  color: #005A9C;'#10'}'#10#10'h2 {'#10'  f'
  +'ont-size: 1.5em;'#10'  color: #005A9C;'#10'}'#10#10'/* Style applied to Pas'
  +'cal code in documentation'#10'   (e.g. produced by @longcode tag) } */'#10
  +'.longcode {'#10'  font-family: monospace;'#10'  font-size: 1.2em;'#10'  bac'
  +'kground-color: #eee;'#10'  padding: 0.5em;'#10'  border: thin solid #ccc;'
  +#10'}'#10'span.pascal_string { color: #000080; }'#10'span.pascal_keyword { f'
  +'ont-weight: bolder; }'#10'span.pascal_comment { color: #000080; font-style:'
  +' italic; }'#10'span.pascal_compiler_comment { color: #008000; }'#10'span.pa'
  +'scal_numeric { }'#10'span.pascal_hex { }'#10#10'p.hint_directive { color: r'
  +'ed; }'#10#10'input#search_text { }'#10'input#search_submit_button { }'#10#10
  +'acronym.mispelling { background-color: #f00; }'#10#10'/* Actually this redu'
  +'ces vertical space between *every* paragraph'#10'   inside list with @itemS'
  +'pacing(compact).'#10'   While we would like to reduce this space only for t'
  +'he'#10'   top of 1st and bottom of last paragraph within each list item.'#10
  +'   But, well, user probably will not do any paragraph breaks'#10'   within '
  +'a list with @itemSpacing(compact) anyway, so it''s'#10'   acceptable soluti'
  +'on. */'#10'ul.compact_spacing p { margin-top: 0em; margin-bottom: 0em; }'#10
  +'ol.compact_spacing p { margin-top: 0em; margin-bottom: 0em; }'#10'dl.compac'
  +'t_spacing p { margin-top: 0em; margin-bottom: 0em; }'#10#10'/* Style for ta'
  +'ble created by @table tags:'#10'   just some thin border.'#10#10'   This wa'
  +'y we have some borders around the cells'#10'   (so cells are visibly separa'
  +'ted), but the border'#10'   "blends with the background" so it doesn''t loo'
  +'k too ugly.'#10'   Hopefully it looks satisfactory in most cases and for mo'
  +'st'#10'   people.'#10#10'   We add padding for cells, otherwise they look t'
  +'oo close.'#10'   This is normal thing to do when border-collapse is set to'
  +#10'   collapse (because this eliminates spacing between cells).'#10'*/'#10
  +'table.table_tag { border-collapse: collapse; width: 100% }'#10'table.table_'
  +'tag td { border: 1pt solid gray; padding: 0.3em; }'#10'table.table_tag th {'
  +' border: 1pt solid gray; padding: 0.3em; }'#10#10'table.detail {'#10'  bord'
  +'er: 1pt solid gray;'#10'  margin-top: 0.3em;'#10'  margin-bottom: 0.3em;'#10
  +'}'#10#10'.search-form { white-space: nowrap; }'#10'.search-input input { ma'
  +'x-width: 80%; } /* this provides some safe space to always fit even on very'
  +' narrow screens */'#10'.search-input input, .search-button { display: inlin'
  +'e-block; vertical-align: middle; }'#10'.search-input { display: inline-bloc'
  +'k; }'#10#10'/* Do not make extra vertical space at the beginning/end of tab'
  +'le cells.'#10'   We need ">" selector, to not change paragraphs inside list'
  +'s inside'#10'   table cells. */'#10'table.table_tag td > p:first-child,'#10
  +'table.table_tag th > p:first-child,'#10'       td.itemdesc > p:first-child '
  +'{ margin-top: 0em; }'#10#10'table.table_tag td > p:last-child,'#10'table.ta'
  +'ble_tag th > p:last-child,'#10'       td.itemdesc > p:last-child { margin-b'
  +'ottom: 0em; }'#10#10'tr.head {'#10'  width: 100%;'#10'}'#10#10'tr.head th {'
  +#10'  width: 100%;'#10'  text-align: right;'#10'}'
]);
LazarusResources.Add('introduction','TXT',[
  '@title(Overview)'#10'@shorttitle({PROJECTNAME})'#10#10'{PROJECTNAME} is an a'
  +'pplication or library to ...'#10#10'This is the documentation overview of t'
  +'he application or library feel free to change it.'#10#10'Check pasdoc docum'
  +'entation on the web: https://pasdoc.github.io/'#10#10'@table( @rowHead( @ce'
  +'ll(Next @link(quickstart Quick start)) ) )'
]);
LazarusResources.Add('quickstart','TXT',[
  '@title(Quick start)'#10'@shorttitle(Quick start)'#10#10'@section(1 SecFirst '
  +'Step One)'#10#10'Text for step one.'#10#10'@section(1 SecSecond Step Two)'
  +#10#10'Text for step two.'
]);
